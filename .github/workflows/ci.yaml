name: CI
on:
  push:
    tags: ["*"]
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  e2e-test:
    name: E2E test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true
      - name: Setup curl
        run: |
          wget https://github.com/stunnel/static-curl/releases/download/8.6.0-1/curl-linux-x86_64-8.6.0.tar.xz
          tar xf curl-linux-x86_64-8.6.0.tar.xz
          ./curl --version
      - name: Build echo server
        run: |
          go version
          go get
          go build ./example/echo-server
      - name: Test
        run: |
          ./testdata/gencert.sh
          ./echo-server -verbose -listen-addr :8443 &
          sleep 1
          ./curl -v --fail --insecure -o o.json https://localhost:8443/json

          test $(jq -r '.http2' o.json) = "3:100;4:10485760;2:0|1048510465|0|m,s,a,p"
          test $(jq -r '.ja3' o.json) = "0149f47eabf9a20d0893e2a44e5a6323"
          test $(jq -r '.ja4' o.json) = "t13d3112h2_e8f1e7e78f70_6bebaf5329ac"
          test $(jq -r '.user-agent' o.json) = "curl/8.6.0"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true
      - run: |
          go version
          go get
      - name: make test
        run: |
          echo '```' >> $GITHUB_STEP_SUMMARY
          make test >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  build-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      # Allow creating releases
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - run: |
          go version
          go get

      - run: make build

      - name: Extract short commit SHA
        id: short-sha
        run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # Upload some useful binaries for debug
      - uses: actions/upload-artifact@v4
        with:
          name: fingerproxy_darwin_arm64_${{ steps.short-sha.outputs.value }}
          path: bin/fingerproxy_darwin_arm64

      - uses: actions/upload-artifact@v4
        with:
          name: fingerproxy_linux_amd64_${{ steps.short-sha.outputs.value }}
          path: bin/fingerproxy_linux_amd64

      - name: Release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG=$(git describe --tags --abbrev=0 HEAD)
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ || true)
          [[ -n $LAST_TAG ]] && RANGE=$LAST_TAG..HEAD || RANGE=HEAD
          RELEASE_NOTES=$(git log "$RANGE" --oneline --decorate)

          gh release create --notes "$RELEASE_NOTES" "$TAG" bin/*
